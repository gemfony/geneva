{
  "nClients": {
    "comment": "numbers of clients to be benchmarked",
    "default": "1000",
    "value": "1000"
  },
  "duration": {
    "comment": "duration (hours:minutes) for which each competitor will run until it will eventually be stopped",
    "default": "01:00",
    "value": "01:00"
  },
  "competitors": {
    "comment": "A list of configurations to run against each other in this test",
    "default": {
      "item": "'Boost.Asio', 'asio', '--consumer asio --asio_port 10000 --asio_nProcessingThreads 1', 'We will try to reconnect', 'GAsioConsumerClientT<processable_type>::run_(): Client has terminated'",
      "item": "'Boost.Beast', 'beast', '--consumer beast --beast_port 10001 --beast_nListenerThreads 1','', 'GWebsocketClientT<processable_type>::run_(): Client session has terminated'",
      "item": "'MPI', 'mpi', '--consumer mpi --mpi_master_nIOThreads 1', '', 'GMPIConsumerWorkerNodeT<processable_type>::run(): Worker has terminated'"
    },
    "value": {
      "item": "'Boost.Asio', 'asio', '--consumer asio --asio_port 10000 --asio_nProcessingThreads 1', 'We will try to reconnect', 'GAsioConsumerClientT<processable_type>::run_(): Client has terminated'",
      "item": "'Boost.Beast', 'beast', '--consumer beast --beast_port 10001 --beast_nListenerThreads 1','', 'GWebsocketClientT<processable_type>::run_(): Client session has terminated'",
      "item": "'MPI', 'mpi', '--consumer mpi --mpi_master_nIOThreads 1 --mpi_worker_pollTimeout 600', '', 'GMPIConsumerWorkerNodeT<processable_type>::run(): Worker has terminated'"
    }
  },
  "resultFile": {
    "comment": "The name of a file to which results of the",
    "comment": "benchmark should be written",
    "default": "GNetworkedConsumerStability.C",
    "value": "GNetworkedConsumerStability.C"
  },
  "mpirunLocation": {
    "comment": "The location of the mpirun executable to use",
    "default": "mpirun",
    "value": "mpirun"
  },
  "interMeasurementDelaySecs": {
    "comment": "Delay in between starting benchmark executables, which might be helpful to give the OS time to free up resources",
    "default": "60",
    "value": "60"
  },
  "clientStartupDelay": {
    "comment": "Amount of time to wait after starting server to start the clients in seconds",
    "default": "60",
    "value": "60"
  },
  "graphResolution": {
    "comment": "Amount of data points to show in the graph",
    "default": "60",
    "value": "60"
  },
  "clientStartupPerSec": {
    "comment": "The amount of clients to start per second until all clients have been started.",
    "comment": "Setting this to zero means starting all clients immediately.",
    "default": "5",
    "value": "5"
  }
}
