{
    "header": {
        "comment": "This configuration file was automatically created by GParserBuilder",
        "comment": "2015-Nov-01 12:47:32"
    },
    "nVariables": {
        "comment": "The number of variables to act on",
        "default": "100",
        "value": "100"
    },
    "delays": {
        "comment": "A list of delays through which main() should cycle. Format: seconds:milliseconds",
        "default": "(0,1), (0,10), (0,100), (0,500), (1,0)",
        "value": "(0,1), (0,10), (0,100), (0,500), (1,0)"
    },
    "resultFile": {
        "comment": "The name of a file to which results should be stored",
        "default": "networkResults.C",
        "value": "networkResults.C"
    },
    "shortResultFile": {
        "comment": "The name of a file to which short results should be stored",
        "default": "shortDelayResults.txt",
        "value": "shortDelayResults.txt"
    },
    "nMeasurements": {
        "comment": "The number of measurements for each delay",
        "default": "10",
        "value": "10"
    },
    "interMeasurementDelay": {
        "comment": "The amount of seconds to wait between two measurements",
        "default": "1",
        "value": "1"
    },
    "evalPolicy": {
        "comment": "Specifies which strategy should be used to calculate the evaluation:",
        "comment": "0 (a.k.a. USESIMPLEEVALUATION): Always call the evaluation function, even for invalid solutions",
        "comment": "1 (a.k.a. USEWORSTCASEFORINVALID) : Assign the worst possible value to our fitness and evaluate only valid solutions",
        "comment": "2 (a.k.a. USESIGMOID): Assign a multiple of validityLevel_ and sigmoid barrier to invalid solutions, apply a sigmoid function to valid evaluations",
        "comment": "3 (a.k.a. USEWORSTKNOWNVALIDFORINVALID): Assign \"invalidityLevel*worstKnownValid\" to invalid individuals, using normal evaluation otherwise",
        "default": "0",
        "value": "0"
    },
    "steepness": {
        "comment": "When using a sigmoid function to transform the individual's fitness,",
        "comment": "this parameter influences the steepness of the function at the center of the sigmoid.",
        "comment": "The parameter must have a value > 0.",
        "default": "1000",
        "value": "1000"
    },
    "barrier": {
        "comment": "When using a sigmoid function to transform the individual's fitness,",
        "comment": "this parameter sets the upper\/lower boundary of the sigmoid.",
        "comment": "The parameter must have a value > 0.",
        "default": "10000",
        "value": "10000"
    },
    "maxUnsuccessfulAdaptions": {
        "comment": "The maximum number of unsuccessful adaptions in a row for one call to adapt()",
        "default": "1000",
        "value": "1000"
    },
    "maxRetriesUntilValid": {
        "comment": "The maximum allowed number of retries during the",
        "comment": "adaption of individuals until a valid solution was found",
        "comment": "A parameter set is considered to be \"valid\" if",
        "comment": "it passes all validity checks",
        "default": "10",
        "value": "10"
    },
    "maximize": {
        "comment": "Specifies whether the individual should be maximized (1) or minimized (0)",
        "comment": "Note that minimization is the by far most common option.",
        "default": "false",
        "value": "false"
    },
    "perItemCrossOverProbability": {
        "comment": "The likelihood for two data items to be exchanged",
        "default": "0.5",
        "value": "0.5"
    }
}
